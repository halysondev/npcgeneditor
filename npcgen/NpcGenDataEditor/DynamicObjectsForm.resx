<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Cancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="Accept.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>